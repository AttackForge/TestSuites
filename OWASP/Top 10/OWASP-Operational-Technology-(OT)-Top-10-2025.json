[
    {
        "tags":
        [],
        "testcase": "Unknown Assets and Undocumented Services",
        "details": "<p>Arguably the biggest threat to a network (IT and OT) is unmanaged and unknown assets. This can either be unknown assets that are plugged into your local OT network, or undocumented services (in the worst-case available from the public internet and <a href=\"https://ot.owasp.org/v/2025/the-top-10/insufficient-access-control/\" rel=\"noopener noreferrer\" target=\"_blank\">without sufficient access control</a>.</p><p>There is an overlap with the <a href=\"https://ot.owasp.org/v/2025/the-top-10/missing-incident-detection-reaction-capabilities/\" rel=\"noopener noreferrer\" target=\"_blank\">Missing Incident Detection/Reaction Capabilities</a> as incident detection depends upon having a complete inventory of the environment. If we do not know what is in our environment, we cannot detect if something is happening to it.</p><h2></h2><h2>Description</h2><p>Unknown assets are devices or systems in an OT environment that are not properly identified or documented. These assets can include legacy systems, unmanaged devices, or unauthorized connections that are not accounted for in the organization's inventory.</p><p>This is your typical \"shadow IT\" problem, but in the OT world, it can be even more dangerous. Unknown assets can be anything from a rogue device connected to the network to an undocumented service running on a server. These assets can introduce vulnerabilities and weaknesses into the system, making it easier for attackers to gain access and move laterally within the network.</p><p>These assets are mostly already or will become outdated over time and introduce vulnerabilities and weaknesses into the system. Such assets can for example be used as initial access points into the network, for privilege escalation, establishing persistence or lateral movement. Having a full inventory of assets that not only includes devices but also established remote access, deployed privileges and other services is crucial to understanding the environment we are working with.</p><p>Undocumented services can be any service that is not properly documented or managed, such as remote access solutions, cloud services, or third-party applications. These services can introduce vulnerabilities and weaknesses into the system, making it easier for attackers to gain access and move laterally within the network.</p><p>A special case of undocumented services are unmanaged external maintenance accounts. They are often used for increased convienience but offer adversaries ample attack opportunities. This can be seen as a case of <a href=\"https://ot.owasp.org/v/2025/the-top-10/missing-awareness/\" rel=\"noopener noreferrer\" target=\"_blank\">missing awareness</a>.</p><h3>Unmanaged External Access</h3><p>Unmanaged external access refers to connections to the OT environment that are not properly controlled or monitored. This can include remote access solutions, such as TeamViewer or VPNs, that are not documented or managed by the organization. These unmanaged connections can provide attackers with a way to bypass security controls and gain unauthorized access to the OT environment.</p><h3>Unmanaged Access for Maintenance</h3><p>Unmanaged access for external personnel refers to situations where third-party vendors, contractors, or maintenance personnel have access to from within the OT environment without proper oversight or documentation. This can lead to unauthorized changes, vulnerabilities, and potential security breaches.</p><p>An example would be third-party contractor (that is connected to the internal network through VPN) that has access to the OT environment for maintenance purposes but does not follow proper security protocols or does not have their access documented. This can lead to unauthorized changes, vulnerabilities, and potential security breaches.</p><h2></h2><h2>Rationale</h2><p>History has shown that undocumented assets can be used by attackers for everything from initial access, via priviledge escalation up to completing the action on objectives. Hardening and segmentation measures can only be complete if all the assets are known and under consideration. Getting an overview of my network is always and therefore the most crucial step when starting with a security program. It is also the fundamental prerequisite for every ISMS, CSMS, and other frameworks.</p><h2></h2><h2>Known Attacks/Examples</h2><ul><li>Stuxnet</li><li>Triton</li><li>WannaCry</li><li><a href=\"https://en.wikipedia.org/wiki/Colonial_Pipeline_ransomware_attack\" rel=\"noopener noreferrer\" target=\"_blank\">Colonial Pipeline Hack</a>: The attackers gained access to the system by means of a compromised password for a disused VPN account.</li><li><a href=\"https://www.theregister.com/2021/02/09/florida_water_hacked/\" rel=\"noopener noreferrer\" target=\"_blank\">Someone tried to poison a Florida city by hijacking its water treatment plant via TeamViewer, says sheriff</a></li><li><a href=\"https://www.bleepingcomputer.com/news/security/cisa-warns-water-facilities-to-secure-hmi-systems-exposed-online/\" rel=\"noopener noreferrer\" target=\"_blank\">CISA and the Environmental Protection Agency (EPA) warned water facilities today to secure Internet-exposed Human Machine Interfaces (HMIs) from cyberattacks.</a></li></ul><h2></h2><h2>Mitigation/Countermeasures</h2><h3>Design and Implementation</h3><ul><li>OT-environemts are static by design. During the building phase, the designer or integrator normally provides a detailed description of the environment. Changes to the environment must be documented. It is crucial to have the documentation process as part of the change process or change management policy.</li><li>If one starts with an already existing environment, the first step to a complete asset inventory can be to take a pen and a piece of paper, go through the location and write down every device that can be seen. This is not only restricted to manufacturing or powerplants, but all types of environments we are working in.</li></ul><h3>Operational</h3><ul><li>mitigations for integrators/builders: Provide the documentation to the customer/asset owner.</li><li>Implement asset discovery and inventory management tools to identify and document all assets in the OT environment.</li><li>Regularly scan and monitor the network for new or unknown devices.</li><li>Perform port/traffic monitoring.</li><li>Enforce strict access controls and authentication mechanisms to prevent unauthorized devices from connecting to the network. Also assume rogue devices/services in the network when designing security measures.</li></ul><h2></h2><h2>Next Actionable Steps</h2><ul><li>Conduct a thorough inventory of all devices and systems in the OT environment.</li><li>Implement network scanning and discovery tools to identify unknown assets.</li><li>Establish a process for documenting and managing changes to the OT environment.</li><li>Regularly review and update the asset inventory to ensure accuracy and completeness.</li></ul><h2></h2><h2>References</h2><h3>Standards</h3><ul><li>Applicable standard requirements are listed in the <a href=\"https://ot.owasp.org/v/2025/appendix/mappingTable/\" rel=\"noopener noreferrer\" target=\"_blank\">provided mapping table in the appendix</a>.</li><li>Following additional standards are relevant:<ul><li>NERC CIP ID.AM Asset Management</li><li>NERC CIP PR.AC Identity Management and Access Control</li><li>NIST 1800-23 Energy Sector Asset Management: For Electric Utilities, Oil &amp; Gas Industry</li><li>NIST 1800-5 IT Asset Management</li></ul></li></ul><h3>Background information</h3><ul><li>N.A.</li></ul><h3>Tooling</h3><ul><li><strong><em>Network Scanning and Discovery Tools:</em></strong>: <a href=\"https://nmap.org/\" rel=\"noopener noreferrer\" target=\"_blank\">Nmap</a> is the standard OSS active network scanning tool. Be aware that it can be intrusive and may disrupt operations in a production environment. <a href=\"https://www.shodan.io/\" rel=\"noopener noreferrer\" target=\"_blank\">Shodan</a> is a web-based search engine that can help identify devices connected to the internet, including those in OT environments.</li><li><strong><em>Network Monitoring Tools:</em></strong>: <a href=\"https://www.wireshark.org/\" rel=\"noopener noreferrer\" target=\"_blank\">Wireshark</a> is an OSS network protocol analyzer that can capture and analyze network traffic, helping to identify unknown devices and services.</li></ul>",
        "sort_order": 1
    },
    {
        "tags":
        [],
        "testcase": "(Accessible) Devices with Known Vulnerabilities/Issues",
        "details": "<p>Attackers love to find software/hardware with known vulnerabilities, especially if exploits are already available. Given a sufficiently devastating vulnerability, all other defenses are naught and the attacker can take over the device.</p><p>This can be used for initial access, e.g., when exploiting public facing services such as VPNs, or can be used within the target network for Lateral-Movement or Privilege-Escalation.</p><h2></h2><h2>Description</h2><p>If an attacker is able to access a system with known exploitable vulnerable components, most other defense mechanisms are useless. The attacker will be able to take over the system, the only defenses that remain are those that reduce the pwned device's blast radius, i.e., reduces the systems that an attacker can attack \"out-going\" from the comproised device.</p><p>In traditional IT, the typical recommendation is to upgrade. This does not work in OT due to safety concerns, mandatory update time-windows, and generally longer lifetimes of used components. Compared to IT, OT works at a glacial pace.</p><p>As updates are sometimes not possible, mitigations such as network segregation are used. This prevents vulnerable systems to become accessible to attackers. Alas, these counter-measures do not solve the problem: if there is a vulnerability within the counter-measure, the original vulnerability can still be exploited. This often makes OT systems <a href=\"https://ot.owasp.org/v/2025/the-top-10/unknown-assets-and-admin-access/\" rel=\"noopener noreferrer\" target=\"_blank\">very vulnerable against unexpected admin access</a> or <a href=\"https://ot.owasp.org/v/2025/the-top-10/broken-zone-and-conduits-design/\" rel=\"noopener noreferrer\" target=\"_blank\">badly designed zones</a>: once the attacker is in the network, they have access to exploitable systems and can commence from there.</p><h3>Why Can’t We Just Upgrade All the Systems?</h3><p>To reiterate on the special problems that the OT world faces, we want to give a list of common excuses/reason given that could prevent an easy implementation of a vulnerability management system:</p><p><strong>You don't just upgrade a medical device or power plant</strong>: this is not your typical desktop PC where you are annoyed if an update breaks your system for a couple of days, this is critical infrastructure upon which lifes potentially depend upon. Imagine you are depending upon a digital pace maker or insulin pump: would you just update it (without making sure that it will not negativly impact you)?</p><p><strong><a href=\"https://ot.owasp.org/v/2025/the-top-10/inadequate_supply_chain_management/\" rel=\"noopener noreferrer\" target=\"_blank\">Problems with the supply chain</a></strong>: compared to traditional IT, in the OT world we have fewer vendors. This gives vendors power over customers, which can lead to a lack of motivation to provide security updates or notify if security problems were discovered.</p><p><strong><a href=\"https://ot.owasp.org/v/2025/the-top-10/components-with-insufficient-security-capabilities/\" rel=\"noopener noreferrer\" target=\"_blank\">Usage of legacy devices</a></strong>: due to the long lifetimes of OT systems, many devices are still in use that were designed without security in mind. This can lead to a situation where the device is not able to be updated or patched, even if a vulnerability is discovered. This is especially true for legacy systems, where the vendor may no longer be in business or may not have the resources to provide updates.</p><p><strong><a href=\"https://ot.owasp.org/v/2025/the-top-10/missing-awareness/\" rel=\"noopener noreferrer\" target=\"_blank\">Missing Security Awareness on the OT side</a></strong>: while safety is a well understood and implement concept in OT, security is often not. This can lead to a situation where the operators do not understand the importance of security updates and do not prioritize them. This can be due to a lack of knowledge or understanding of the risks involved, or it can be due to a lack of resources or time to implement them.</p><p><strong><a href=\"https://ot.owasp.org/v/2025/the-top-10/unknown-assets-and-admin-access/\" rel=\"noopener noreferrer\" target=\"_blank\">Unknown devices and shadow infrastructure</a></strong>: if you don't even know about a device, how should you know that you need to update it?</p><p>Please note, that this shows (primarily to IT security people) why upgrading is not as simple as in other domains but <strong>does not mean that we (as OT) can use any of this as an excuse for not having update procedures in place</strong>.</p><h3>Vulnerability Mangement?</h3><p>Insufficient or missing vulnerability management practices in an OT environment can leave systems exposed to known security vulnerabilities. Not installing security patches eventually, will lead to an amplification effect when (not if) the attacker is within the system.</p><p>Even if all the issues mentioned in the last section do not apply for an OT system, security updates are very often not applied. The reason for that is <strong>missing vulnerability management</strong>.</p><h2></h2><h2>Rationale</h2><p>Vulnerable devices bad. Especially in critical infrastructure.</p><h2></h2><h2>Known Attacks/Examples</h2><ul><li><a href=\"https://services.google.com/fh/files/misc/apt44-unearthing-sandworm.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">APT44 is a persistent and operationally mature adversary that uses diverse initial access methods ranging from common vectors such as phishing, credential harvesting, and known vulnerability exploitation to targeted supply chain compromises.</a></li><li><a href=\"https://www.cisa.gov/news-events/cybersecurity-advisories/aa24-038a\" rel=\"noopener noreferrer\" target=\"_blank\">Volt Typhoon typically gains initial access to the IT network by exploiting known or zero-day vulnerabilities in public-facing network appliances</a></li><li><a href=\"https://www.theguardian.com/business/article/2024/aug/08/sellafield-apologises-guilty-plea-security-failings-nuclear\" rel=\"noopener noreferrer\" target=\"_blank\">Sensitive nuclear information (SNI), the industry’s special classification system, was left vulnerable in part because of the use of “obsolete” technology including Windows 7 and Windows 2008, Lawrence said.</a></li></ul><h2></h2><h2>Mitigation/Countermeasures</h2><h3>Developers/Builders: Design and Implementation</h3><ul><li>Try to prevent vulnerabilitites from accessing the system (<a href=\"https://owaspsamm.org/\" rel=\"noopener noreferrer\" target=\"_blank\">OWASP SAMM2</a>)</li><li>Test hardware/software before deploying them in the field (<a href=\"https://owasp.org/owasp-istg/index.html\" rel=\"noopener noreferrer\" target=\"_blank\">OWASP IoT Security Testing Guide</a>, <a href=\"https://scriptingxss.gitbook.io/firmware-security-testing-methodology\" rel=\"noopener noreferrer\" target=\"_blank\">OWASP Firmware Security Testing Methodology</a>)</li><li>Inform customers about security updates. Provide SBOMs.</li><li>Don't depend upon security-by-obscurity.</li><li>Use memory-safe programming languages and utilize security-features of frameworks.</li></ul><h3>Integrators/Operators: Operational</h3><ul><li>Make mandatory vulnerabilty notifications and remediation part of your supplier contracts.</li><li>Keep an up-to-date asset register with hardware/software versions.</li><li>Test hardware/software before deploying them in the field (<a href=\"https://owasp.org/owasp-istg/index.html\" rel=\"noopener noreferrer\" target=\"_blank\">OWASP IoT Security Testing Guide</a>, <a href=\"https://scriptingxss.gitbook.io/firmware-security-testing-methodology\" rel=\"noopener noreferrer\" target=\"_blank\">OWASP Firmware Security Testing Methodology</a>)</li><li>Establish a vulnerability management program that includes regular vulnerability scanning, patch management, and remediation processes: Prioritize critical security updates and patches for OT systems to address high-risk vulnerabilities.</li><li>Implement network segmentation and access controls to limit the impact of security vulnerabilities.</li></ul><h2></h2><h2>Next Actionable Steps</h2><ul><li><a href=\"https://ot.owasp.org/v/2025/the-top-10/unknown-assets-and-admin-access/\" rel=\"noopener noreferrer\" target=\"_blank\">Inventarize your devices and services</a></li><li>gather SBOMs and check for known vulnerabilities</li><li>test your devices and services for known vulnerabilities if possible (pen-testing)</li><li>create a risk-based treatment plan, start with mitigations that have the highest impact</li><li>rinse and repeat</li></ul><h2></h2><h2>References</h2><h3>Standards</h3><ul><li>Applicable standard requirements are listed in the <a href=\"https://ot.owasp.org/v/2025/appendix/mappingTable/\" rel=\"noopener noreferrer\" target=\"_blank\">provided mapping table in the appendix</a>.</li></ul><h3>Background information</h3><ul><li><strong><em>OWASP</em></strong> maintains the <a href=\"https://owasp.org/owasp-istg/index.html\" rel=\"noopener noreferrer\" target=\"_blank\">OWASP IoT Security Testing Guide</a> as well as the <a href=\"https://scriptingxss.gitbook.io/firmware-security-testing-methodology\" rel=\"noopener noreferrer\" target=\"_blank\">OWASP Firmware Security Testing Methodology</a>, both of which provide guidance on how to test for vulnerabilities in IoT and firmware systems.</li><li><a href=\"https://www.cisa.gov/sbom\" rel=\"noopener noreferrer\" target=\"_blank\">Software Bill of Materials (SBOM) - CISA</a> describes a component's dependencies and vulnerabilities in a machine-readable format. This can be used to track known vulnerabilities in your software supply chain.</li></ul><h3>Tooling</h3><ul><li><a href=\"https://shodan.io/\" rel=\"noopener noreferrer\" target=\"_blank\">shodan.io</a> allows you to search for devices connected to the internet, including those with known vulnerabilities.</li><li><a href=\"https://owasp.org/www-project-dependency-check/\" rel=\"noopener noreferrer\" target=\"_blank\">OWASP dependency-check</a> allows you to scan you Java projects for known vulnerabilities in dependencies. It is typically called manually during software development, but can also be integrated into CI/CD pipelines. <a href=\"https://owasp.org/www-project-dependency-track/\" rel=\"noopener noreferrer\" target=\"_blank\">OWASP dependency-track</a> accepts SBOMs and can be used to periodically track known vulnerabilities in your software supply chain. It can notify you when new vulnerabilities are discovered.</li></ul>",
        "sort_order": 2
    },
    {
        "tags":
        [],
        "testcase": "Inadequate Supply Chain Management",
        "details": "<p><a href=\"https://attack.mitre.org/techniques/T0862/\" rel=\"noopener noreferrer\" target=\"_blank\">Supply Chain Compromise</a> occur when adversaries target weaknesses in an organisation's supply chain - whether it's hardware, software or services provided by third parties. Instead of compromising the target directly, attackers exploit the relationship of trust between the organisation and its vendors or contractors to gain access to sensitive OT systems.</p><p>In the context of OT, the supply chain may involve complex vendor ecosystems, including software providers for SCADA systems, hardware manufacturers for industrial equipment, or maintenance services. An attacker infiltrates these supply chain links to gain access to operational technology, bypassing traditional cybersecurity defences.</p><h2></h2><h2>Description</h2><p>It is vital to protect OT supply chains, given their critical role in enabling modern society to function and generate economic prosperity. These supply chains facilitate the production, distribution, and maintenance of essential OT products, systems, and services that underpin various sectors, including healthcare, finance, transportation, and national security. The following phases of the lifecycle of OT components or systems have to be considered when dealing with OT supply chains:</p><ul><li>Design (e.g., requirements specification and architecture)</li><li>Development and production (e.g., raw material procurement and testing/quality assurance)</li><li>Distribution (e.g., logistics and transportation)</li><li>Acquisition, (e.g., retail and sales)</li><li>Deployment (e.g., installation and configuration)</li><li>Maintenance (e.g., use and support, especially provisioning of updates)</li><li>Disposal/decommissioning</li></ul><h2></h2><h2>Rationale</h2><p>Dragos concluded in their <a href=\"https://www.dragos.com/wp-content/uploads/Dragos-Oil-and-Gas-Threat-Perspective-2019.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">gloabl oil and gas cyber threat perspective</a> in August 2019 that the growing threat of supply chain attacks and vendor compromises allows new avenues for activity groups to compromise IT and OT environments alike.</p><p>Furthermore, examples like SolarWinds Orion and Crowdstrike threat detection software demonstrated the scalability of supply chain issues, affecting numerous victims at the same time by the very same issue.</p><h2></h2><h2>Known Attacks</h2><ul><li><a href=\"https://attack.mitre.org/campaigns/C0024/\" rel=\"noopener noreferrer\" target=\"_blank\">SolarWinds Orion Compromise</a>. The SolarWinds compromise was a sophisticated supply chain cyber operation that was discovered in December 2020. The cyber operation involved the injection of malicious code into the SolarWinds Orion software build process, which was then distributed through a standard software update. The cyber actors also used password spraying, token theft, API abuse, spear phishing and other supply chain attacks to compromise user accounts and leverage their associated access.</li><li><a href=\"https://www.sygnia.co/blog/crowdstrike-outage-security-vs-operational-stability/\" rel=\"noopener noreferrer\" target=\"_blank\">CrowdStrike Compromise</a>. In 2024, a content update for CrowdStrike's Falcon sensor software caused global system disruptions. The \"Blue Screen of Death\" (BSOD) was triggered by a \"Named Pipes\" update intended to improve threat detection. An error in the update file's formatting led to the CrowdStrike driver accessing a non-existent memory address, triggering the BSOD. This affected numerous industries, including airlines, which canceled or delayed flights; healthcare, which experienced issues with medical records; and emergency 911 call centers, of which up to 100 in the US reported downtime. The outage disrupted businesses relying on OT and conventional IT, highlighting the widespread dependency on reliable technological services.</li><li><a href=\"https://docs.broadcom.com/doc/dragonfly_threat_against_western_energy_suppliers\" rel=\"noopener noreferrer\" target=\"_blank\">Dragonfly</a>. A cyber espionage campaign against a range of targets, primarily in the energy sector, provided the attackers with the capability to carry out sabotage operations against their victims. The attackers were able to infiltrate a number of strategically significant organisations for the purpose of espionage. Had they chosen to utilise the sabotage capabilities at their disposal, they could have potentially caused damage or disruption to the energy supply in the affected countries.</li><li><a href=\"https://en.wikipedia.org/wiki/Petya_(malware_family)\" rel=\"noopener noreferrer\" target=\"_blank\">NotPetya</a>. It was believed that the software update mechanism of M.E.Doc—a Ukrainian tax preparation program that, according to F-Secure analyst Mikko Hyppönen, \"appears to be de facto\" among companies doing business in the country—had been compromised to spread the malware. Analysis by ESET found that a backdoor had been present in the update system for at least six weeks prior to the attack, describing it as a \"thoroughly well-planned and well-executed operation\". The developers of M.E.Doc denied that they were entirely responsible for the cyberattack, stating that they too were victims.</li><li><a href=\"https://www.bitdefender.com/en-au/blog/hotforsecurity/denmarks-train-network-frozen-due-to-cyberattack-on-subcontractor\" rel=\"noopener noreferrer\" target=\"_blank\">Denmark’s Train Network Frozen Due to Cyberattack on Subcontractor</a>.</li></ul><h2></h2><h2>Mitigation/Countermeasures</h2><h3>General</h3><p>Establish a <a href=\"https://attack.mitre.org/mitigations/M0817/\" rel=\"noopener noreferrer\" target=\"_blank\">Supply Chain Management</a> that includes policies and procedures to ensure all devices and components come from trusted suppliers and are tested to confirm their integrity.</p><h3>Design and Implementation</h3><ul><li>It is vital that manufacturers of connectable software and hardware products ensure that such products are developed in line with security-by-default and security-by-design principles, and that their security is maintained during a support period.</li><li>Products should undergo a third-party conformity assessment before they can be placed on the market.</li><li>Consider implementing a multi-vendor strategy.</li></ul><h3>Operational</h3><ul><li>A dedicated notification procedure should be established in the event of a severe incident or an actively exploited vulnerability in a product that may affect multiple parties.</li><li>It is imperative to undertake a thorough evaluation of the risk profile exhibited by suppliers on a regularly basis. This evaluation should be used to determine the necessity of reducing the risk posed by suppliers deemed to be high-risk. If the circumstances necessitate, it is also crucial to impose restrictions on or to exclude suppliers considered to be high-risk.</li><li>Promotion of information exchange, awareness and training addressing supply chain risks.</li><li>Include supply chain attacks in the regular incident, emergency, and crisis management plans and exercises.</li></ul><h2></h2><h2>Next Actionable Steps</h2><ul><li>Check on a regular basis that critical suppliers have appropriate and proportionate cyber security risk management measures in place to manage identified supply chain security risks. This may be conducted by supplier assessments or requiring relevant certifications (e.g., IEC 62443-4-1, IEC 62443-4-2).</li><li>Ensure that relevant entities are resilient to supply chain threats by conducting preparedness or stress tests.</li><li>Create test platforms or sandbox environments for secure testing.</li></ul><h2></h2><h2>References</h2><h3>Standards</h3><ul><li>Applicable standard requirements are listed in the <a href=\"https://ot.owasp.org/v/2025/appendix/mappingTable/\" rel=\"noopener noreferrer\" target=\"_blank\">provided mapping table in the appendix</a>.</li></ul><h3>Background information</h3><ul><li><strong><em>Noteable CWSs</em></strong>: the following Common Weakness Enumeration idenifier are highly relevant to this Top 10 item:<ul><li><a href=\"https://cwe.mitre.org/data/definitions/912.html\" rel=\"noopener noreferrer\" target=\"_blank\">CWE-912: Hidden Functionality</a> describes an asset that includes functionality which is undocumented, not specified, and not accessible through any interface or command sequence that is apparent to the asset's users or administrators.</li><li><a href=\"https://cwe.mitre.org/data/definitions/1361.html\" rel=\"noopener noreferrer\" target=\"_blank\">CWE-1361: ICS Supply Chain</a> is a weakness category describes ICS supply chain risks in general. Weakness in this category address for instance the <a href=\"https://cwe.mitre.org/data/definitions/1369.html\" rel=\"noopener noreferrer\" target=\"_blank\">IT/OT Convergence/Expansion</a>, <a href=\"https://cwe.mitre.org/data/definitions/1370.html\" rel=\"noopener noreferrer\" target=\"_blank\">Common Mode Frailties</a>, <a href=\"https://cwe.mitre.org/data/definitions/1371.html\" rel=\"noopener noreferrer\" target=\"_blank\">Poorly Documented or Undocumented Features</a>, and <a href=\"https://cwe.mitre.org/data/definitions/1372.html\" rel=\"noopener noreferrer\" target=\"_blank\">OT Coutnerfeit and Malicious Corruption</a>.</li></ul></li></ul>",
        "sort_order": 3
    },
    {
        "tags":
        [],
        "testcase": "Loss of Availability",
        "details": "<p>Availability, esp. in the context of Safety, is paramount and well-understood in the OT world. However, some aspects of availability are still problematic, e.g., integrity is part of availability.</p><p>Please note that we talk about protecting \"our\" infrastructure from DDoS and do not talk about becoming part of a botnet after a compromise (which is also problematic, but rather a subpart of <a href=\"https://ot.owasp.org/v/2025/the-top-10/missing-incident-detection-reaction-capabilities/\" rel=\"noopener noreferrer\" target=\"_blank\">Missing Incident Detection/Reaction Capabilities</a>)</p><h2></h2><h2>Description</h2><p>Availability is the property of being accessible and usable upon demand by an authorized entity. In the context of OT, availability is crucial as many systems are designed to operate continuously and cannot be easily patched or updated without causing downtime.</p><p>In the OT domain, availability is often regarded as the most critical security property due to its direct impact on system functionality and safety. If a system is not available, it cannot perform its intended function, which can lead to safety hazards and other issues. Additionally, there is anecdotal evidence of OT components crashing during network scans, underscoring the importance of maintaining availability.</p><h3>Denial-of-Service Attacks</h3><p>Denial-of-Service (DoS) attacks are a common threat to availability. These attacks can take many forms, including network flooding, resource exhaustion, and application-layer attacks.</p><p>In the context of OT, DoS attacks can disrupt critical systems and services, leading to significant downtime and potential safety hazards. It is important to note that we care about the protection of the OT system itself: if a connected cloud-managed system becomes target of a DoS attack and becomes not available while the OT system/process is still available, this is not an OT availability problem for us.</p><h3>Real-Time Communication Safety</h3><p>One special aspect of availability in OT is the need for real-time communication safety. Many OT systems rely on real-time communication protocols to ensure that data is transmitted and processed in a timely manner, e.g., for controlling medical devices or factory automations. If these protocols are disrupted, it can lead to delays or failures in critical processes.</p><p>Typical IT network protocols such as TCP/IP are not designed for real-time communication and can introduce latency and jitter that can disrupt the operation of OT systems. Therefore, specialized protocols and hardware are often needed to ensure real-time communication safety in OT environments. Thus, real-time communication safety is a crucial aspect of availability in OT.</p><h3>Availability and Integrity</h3><p>The well known CIA triad (Confidentiality, Integrity, Availability) is often misinterpreted in the context of OT. While integrity is often seen as a separate property, it is actually a crucial aspect of availability.</p><p>Imagine a sensor network that is used to monitor the temperature of a critical process. A direct attack against availability would be the destruction of the connected sensors. But if an attacker would perform an Integrity attack, e.g., floods the sensor network with fake temperature data, then the sensor network itself is still available but its sole goal (providing a correct temperature reading) is compromised and thus destroys the availabilty of the overall system.</p><p>To protect against integrity attacks, typically cryptographic measures such as signatures or MACs are used. However, these measures can introduce performance overhead and may not be suitable for all OT systems. For example, <a href=\"https://ot.owasp.org/v/2025/the-top-10/components-with-insufficient-security-capabilities/\" rel=\"noopener noreferrer\" target=\"_blank\">some legacy systems may not have the processing power or memory</a> to support cryptographic algorithms.</p><h3>Availability and Software Updates</h3><p>In the context of OT, software updates are often seen as a risk to availability. This is because many OT systems are designed to operate continuously and cannot be easily patched or updated without causing downtime. However, software updates are also crucial for <a href=\"https://ot.owasp.org/v/2025/the-top-10/accessible-devices-with-known-vulnerabilities/\" rel=\"noopener noreferrer\" target=\"_blank\">maintaining the security and integrity of OT systems</a>.</p><p>The <a href=\"https://en.wikipedia.org/wiki/2024_CrowdStrike-related_IT_outages\" rel=\"noopener noreferrer\" target=\"_blank\">2024 CrowdStrike incident</a> is a recent example of how software updates can impact availability. In this case, automatic EDR updates causing significant disruption in multiple OT-areas, e.g., gas stations and hospitals.</p><h2></h2><h2>Rationale</h2><ul><li>availability is paramount for the safety of OT systems</li><li>the impact of integrity on availability is often overlooked</li><li>recent incidents such as the CrowdStrike incident show that even non-malicious software updates can have a significant impact on availability</li></ul><h2></h2><h2>Known Attacks/Examples</h2><ul><li>On Feb. 24, 2022, the night before the Russian government launched its full-scale invasion, <a href=\"https://cyberscoop.com/viasat-malware-wiper-acidrain/\" rel=\"noopener noreferrer\" target=\"_blank\">Russian-backed hackers targeted thousands of modems linked to Viasat</a>, the U.S.-based satellite and internet communications company, and relied on by the Ukrainian military. The attack — attributed to the Russian government by the United States and its allies — relied on a piece of malware that researchers with SentinelLabs dubbed \"AcidRain.\"</li><li><a href=\"https://en.wikipedia.org/wiki/Stuxnet\" rel=\"noopener noreferrer\" target=\"_blank\">Stuxnet</a>: both as an attack against availability and as an example of violating integrity with fake data.</li></ul><h2></h2><h2>Mitigation/Countermeasures</h2><h3>Design and Implementation</h3><ul><li>perform a risk assessment to identify potential availability threats and vulnerabilities in OT systems</li><li>implement redundancy and failover mechanisms to ensure continuous operation in case of a failure or attack</li><li>use specialized real-time communication protocols and hardware to ensure real-time communication safety</li><li>implement cryptographic measures such as signatures or MACs to protect against integrity attacks, while considering the performance overhead and suitability for the specific OT system</li></ul><h3>Operational</h3><ul><li>implement redundancy and failover mechanisms to ensure continuous operation in case of a failure or attack</li></ul><h2></h2><h2>Next Actionable Steps</h2><ul><li>perform a risk assessment to identify potential availability threats and vulnerabilities in OT systems</li></ul><h2></h2><h2>References</h2><h3>Standards</h3><ul><li>Applicable standard requirements are listed in the <a href=\"https://ot.owasp.org/v/2025/appendix/mappingTable/\" rel=\"noopener noreferrer\" target=\"_blank\">provided mapping table in the appendix</a>.</li><li>The <a href=\"https://www.allianz-fuer-cybersicherheit.de/SharedDocs/Downloads/Webs/ACS/DE/BSI-CS/BSI-CS_005E.pdf?__blob=publicationFile&amp;v=6\" rel=\"noopener noreferrer\" target=\"_blank\">BSI Industrial Control System Security: Top 10 threats and countermeasures 2022</a> contains multiple threats directly related to availability, e.g., \"Sabotage\", \"(D)DoS attacks\", \"Technical failure and force majeure\".</li></ul><h3>Background information</h3><ul><li><a href=\"https://www.youtube.com/watch?v=yqhn4xPwbfQ\" rel=\"noopener noreferrer\" target=\"_blank\">PLCs: To Scan or Not to Scan? (youtube, 20.6.2024)</a>: presentation analyzing the impact of active scanning as well as OT-specific targeted scanning on PLCs, showing that even benign scans can cause crashes and disrupt availability.</li></ul><h3>Tooling</h3><ul><li>N.A.</li></ul>",
        "sort_order": 4
    },
    {
        "tags":
        [],
        "testcase": "Insufficient Access Control",
        "details": "<p>Access Control is a critical aspect of security in any system, but it is especially important in Operational Technology (OT) environments. Insufficient access control can lead to unauthorized access to sensitive systems and data, producing serious consequences for safety and security.</p><p>This is an intricate problem that touches on multiple levels of security, including physical, organizational, and technical measures.</p><h2></h2><h2>Description</h2><p>Access Control is the process of restricting access to systems and data to authorized users. Access Control is performed on multiple levels:</p><ul><li><strong>Organizational</strong>: Organizational access control measures, such as policies and procedures, are designed to ensure that only authorized personnel have access to sensitive systems and data. If an organisation has no written down access matrix (which employee is allowed to operate what?), implementing the respective technical access control system is not possible.</li><li><strong>Technical</strong>: Technical access control measures, such as authentication and authorization mechanisms must be implemented within the used components. This is mostly a topic for system designers and implementors. During operation, these available technical access control measures must be used and enforced by the operators and employees.</li><li><strong>Physical</strong>: Physical access control measures, such as locks and security guards, are often the first line of defense against unauthorized access in OT environments. However, they are often over-relied upon, leading to a false sense of security.</li></ul><h3>Particularities of OT</h3><p>Emergency Situations</p><p>Access Control and Safety can be conflicting. A good example is the use of emergency stop buttons. In an emergency situation, it is critical that the emergency stop button can be activated quickly and easily. However, this can lead to a situation where unauthorized personnel can also activate the emergency stop button, leading to potential safety hazards.</p><p>Another good example are medical devices in hospitals: you do not want to have a password prompt when a doctor wants to use a defibrillator</p><p>Legacy Systems</p><p>Old systems often have only <a href=\"https://ot.owasp.org/v/2025/the-top-10/components-with-insufficient-security-capabilities/\" rel=\"noopener noreferrer\" target=\"_blank\">limited security functions</a>. Many (legacy) devices do not support authentication or authorization. As a result, unauthorized access is possible.</p><p>Legacy devices often also offer no connection to a central identity management system. This makes it difficult to maintain and respond to changes in the organization's responsibilities on an ongoing basis</p><h3>Organizational Level</h3><p>On an organizational level, poorly defined access control can result in \"privilege creep,\" where users accumulate more access than necessary for their job, potentially granting them access to systems and data they should not have.</p><p>A well designed access control system should incorporate the following principles:</p><ul><li><strong>Role-Based Access Control</strong>: Users should be assigned roles based on their job responsibilities. This can help to ensure that users only have access to the systems and data that they need to perform their job and prevents privilege creep, where users accumulate access rights over time.</li><li><strong>Least Privilege</strong>: Users/roles should only have access to the functions and data they need to perform their job.</li><li><strong>Separation of Duties</strong>: More than one person is required to perform a task. This should be implemented for critical tasks.</li><li><strong>Clear Trust Boundaries</strong>: To allow for analysis, <a href=\"https://ot.owasp.org/v/2025/the-top-10/broken-zone-and-conduits-design/\" rel=\"noopener noreferrer\" target=\"_blank\">trust boundaries</a> have to be defined. This is especially important in the OT world, where the Purdue Model is often used to define trust boundaries.</li><li><strong>Ongoing Employee Training</strong>: Very often, <a href=\"https://ot.owasp.org/v/2025/the-top-10/missing-awareness/\" rel=\"noopener noreferrer\" target=\"_blank\">OT personnel are not aware of the security implications of their actions</a>. This can lead to a situation where a system is not properly secured because the operators do not know how to do it.</li><li><strong>Deactivating Accounts</strong>: When a user leaves the company, their account should be deactivated.</li></ul><h3>Implementation Level</h3><ul><li>are controls in place? are they well implemented and configured according to best practices?</li><li>given that we want to control access for, e.g., externally reachable adminitrative interfaces (VPN servers, web-panels), are implemented controls sufficient? Having a remote management solution without mandatory and enforced multi-factor authenticator is not state-of-the-art in 2025. Nor was it in 2024. Nor before.</li><li>have default passwords been changed? are there any default accounts that have not been disabled?</li><li>have controls be tested? are they working as intended?</li><li>have physical access control assumptions been documented and tested? It is easier than some people think to get on a factory floor.</li><li><strong>non-repudiation</strong>: the system should be able to prove who did what. This principle is broken if there's a shared user/password list for devices on the factory floor.</li></ul><h2></h2><h2>Rationale</h2><p>The prevalence of:</p><ul><li>shared password lists</li><li>over-dependency on physical security</li><li>initial attack vector: remote access without multi-factor authentication</li></ul><h2></h2><h2>Known Attacks/Examples</h2><ul><li><a href=\"https://www.ksnt.com/news/local-news/kansas-hacker-pleads-guilty-to-shutting-down-drinking-water-plant-with-phone/\" rel=\"noopener noreferrer\" target=\"_blank\">After quitting his job at the plant at the beginning of 2019, he then used the remote login system again on March 27, 2019, to shut down the plant and one of its treatment filters..</a></li><li><a href=\"https://en.wikipedia.org/wiki/Colonial_Pipeline_ransomware_attack\" rel=\"noopener noreferrer\" target=\"_blank\">Colonial Pipeline Hack</a>: The attackers gained access to the system by means of a compromised password for a disused VPN account.</li></ul><h2></h2><h2>Mitigation/Countermeasures</h2><h3>Design and Implementation</h3><ul><li>think about applying zero-trust principles</li><li>define the different systems, how they interacts, and the resulting interfaces (trust boundaries)</li><li>define the roles that are needed to interact with the systems</li><li>Define a minimal role concept.</li><li>e.g. on a sensor<ul><li>administrator -&gt; configuration</li><li>simple user -&gt; only read only access to measuring data</li></ul></li><li>Implement a role-based access control (RBAC) system</li><li>Implement multi-factor authentication</li></ul><h3>Operational</h3><ul><li>Use the provided features implemented by the vendors</li><li>Change password and default user.</li><li>perform periodic account reviews to counter permission creep</li><li>Implement a process for deactivating accounts when a user leaves the company</li></ul><h2></h2><h2>Next Actionable Steps</h2><ul><li>Is sensitive information accessible via the available interfaces?</li><li>Is there a role concept for the devices/systems and has this been implemented?</li></ul><h2></h2><h2>References</h2><h3>Standards</h3><ul><li>Applicable standard requirements are listed in the <a href=\"https://ot.owasp.org/v/2025/appendix/mappingTable/\" rel=\"noopener noreferrer\" target=\"_blank\">provided mapping table in the appendix</a>.</li></ul><h3>Background Information</h3><ul><li><strong><em>Physical Access Control</em></strong><ul><li><a href=\"https://www.cert.govt.nz/information-and-advice/guides/unused-services-and-protocols/disabling-unnecessary-services-and-protocols/\" rel=\"noopener noreferrer\" target=\"_blank\">Disabling unnecessary services and protocols</a></li><li><a href=\"https://www.mangancyber.com/why-is-it-essential-to-disable-or-safeguard-inactive-ports-in-ot-environments/\" rel=\"noopener noreferrer\" target=\"_blank\">Why Disabling unused network ports is crucial in OT environents</a></li></ul></li></ul><h3>Tooling</h3><ul><li>N.A.</li></ul>",
        "sort_order": 5
    },
    {
        "tags":
        [],
        "testcase": "Missing Incident Detection/Reaction Capabilities",
        "details": "<p>The longer an attacker is able to penetrate the network unnoticed, the higher is the probability that the attacker compromises OT. This also applies if incident reaction is slow or technically inadequate. Without logging and monitoring, breaches cannot be detected. An <a href=\"https://www.dragos.com/ot-cybersecurity-year-in-review/#anchor-report\" rel=\"noopener noreferrer\" target=\"_blank\">OT cybersecurity report analysing trends in 2024</a> shows that 45% of service engagements have a lack of visibility across OT networks, making detections, triage, and response incredibly difficult at scale.</p><p>Adversaries may seek to cause <a href=\"https://attack.mitre.org/techniques/T0827/\" rel=\"noopener noreferrer\" target=\"_blank\">Loss of Control</a>, whereby operators are unable to issue commands, even when the malicious interference has subsided.</p><p>Another motivation for attackers may be <a href=\"https://attack.mitre.org/techniques/T0828/\" rel=\"noopener noreferrer\" target=\"_blank\">Loss of Productivity and Revenue</a> by disrupting or damaging the availability and integrity of control system operations, devices and related processes.</p><p>Furthermore, <a href=\"https://attack.mitre.org/techniques/T0837/\" rel=\"noopener noreferrer\" target=\"_blank\">Loss of Protection</a> leading to the compromise of the functions of protective systems designed to prevent the effects of faults and abnormal conditions may be a motivation. This can result in equipment damage, prolonged process disruption and hazards to personnel.</p><p>Finally, <a href=\"https://attack.mitre.org/techniques/T0880/\" rel=\"noopener noreferrer\" target=\"_blank\">Loss of Safety</a> leading to the compromise the functions of safety systems, which are designed to ensure the safe operation of a process when unacceptable or dangerous conditions occur may be a result of a attack. Adversaries may target and disable safety system functions as a prerequisite for subsequent attacks or to allow future unsafe conditions to go unchecked.</p><h2></h2><h2>Description</h2><p>Incident detection and reaction capabilities provide security countermeasures applied when proactive countermeasures did not prevent an attack. The following items introduce vulnerabilities in this category:</p><ul><li>Auditable events, such as logins, failed logins, and executed commands or scripts, are not logged.</li><li>Warnings and errors generate no, inadequate, or unclear log messages.</li><li>Logs of Firmware, OS, applications, and APIs are not monitored for suspicious activity.</li><li>Logs are only stored locally.</li><li>Appropriate alerting thresholds and response escalation processes are not in place or effective.</li><li>Technical security tests (e.g., penetration tests, vulnerability scans, and manual security testing) do not trigger alerts.</li><li>The application cannot detect, escalate, or alert for active attacks in a reasonable short time frame.</li></ul><h2></h2><h2>Rationale</h2><p>Without logging and monitoring, breaches cannot be detected. An OT cybersecurity report analysing trends in 2024 shows that 45% of service engagements have a lack of visibility across OT networks, making detections, triage, and response incredibly difficult at scale.</p><h2></h2><h2>Known Attacks</h2><ul><li><a href=\"https://attack.mitre.org/campaigns/C0034/\" rel=\"noopener noreferrer\" target=\"_blank\">Ukraine Electric Power Attacks</a>. The Ukraine Electric Power Attack was an operation which aims to target and disrupt transmission and distribution substations within the Ukrainian power grid.</li><li><a href=\"https://attack.mitre.org/campaigns/C0030/\" rel=\"noopener noreferrer\" target=\"_blank\">Triton Safety Instrumented System Attack</a>. The Triton Safety Instrumented System Attack was a campaign that took advantage of the Triton malware framework to target a petrochemical organisation. The malware and techniques employed in this campaign were designed to infiltrate specific Triconex Safety Controllers within the environment. The incident was eventually exposed due to a safety trip that occurred as a result of an issue in the malware.</li><li><a href=\"https://attack.mitre.org/software/S0372/\" rel=\"noopener noreferrer\" target=\"_blank\">LockerGoga ransomware</a> infects industrial and manufactoring companies. In March 2019, Norsk Hydro was subjected to a cyberattack that utilised the LockerGoga ransomware to encrypt its computer files. In response, the aluminium and renewable energy company transitioned to manual operations and maintained transparency with the public regarding its progress towards recovery. The security industry has expressed high regard for Norsk Hydro's transparency throughout the discovery and recovery process.</li></ul><h2></h2><h2>Mitigation/Countermeasures</h2><h3>General</h3><p>Implement <a href=\"https://attack.mitre.org/mitigations/M0931/\" rel=\"noopener noreferrer\" target=\"_blank\">Network Intrusion Prevention</a>. At network boundaries, traffic should be blocked using intrusion detection signatures. When it comes to industrial control environments, network intrusion prevention should be configured so that it will not disrupt protocols and communications responsible for real-time functions related to control or safety.</p><h3>Design and Implementation</h3><ul><li>Ensure all login, access control, and server-side input validation failures can be logged with sufficient user context to identify suspicious or malicious accounts and held for enough time to allow delayed forensic analysis.</li><li>Ensure that logs are generated in a format that log management solutions can easily consume.</li><li>Ensure log data is encoded correctly to prevent injections or attacks on the logging or monitoring systems.</li></ul><h3>Operational</h3><ul><li>Ensure that the generated logs are anlayzed and alerts are triggerd, if an event seems suspicious.</li><li>The implementation of intrusion detection signatures at network boundaries is imperative for the effective prevention of unauthorised access. In the context of industrial control environments, the configuration of network intrusion prevention should be configured in a way that it does not disrupt the protocols and communications that are essential for real-time functions related to control or safety.</li><li>DevSecOps teams should establish effective monitoring and alerting such that suspicious activities are detected and responded to quickly.</li><li>Establish or adopt an incident response and recovery plan, such as National Institute of Standards and Technology (NIST) 800-61r2 or later.</li></ul><h2></h2><h2>Next Actionable Steps</h2><ul><li>Perform regular incident detection and response exercises where both technical and organizational aspects are tested.</li><li>Example of testing technical aspects: Generate harmless test-malware and place it at an asset on the system under consideration (SUC). Verify, if the upload on that asset is already blocked or at least alarmed. If not, execute the test-malware and place it somewhere else in the SUC. If the upload to the asset is already blocked, encrypt or encode the malware (with several iterations, if needed) and upload it to the asset again to test if host-based detection is also working besides network-based detection.</li><li>Example of testing organizational aspects: Perform a table top exercise simulating an incident or emergency. Test especially communication flows, responsibilities of the staff, coordination of conducting incident response, and the on-demand acquisition of forensic knowledge (if not in-house) during the exercise.</li></ul><h2></h2><h2>References</h2><h3>Standards</h3><p>Applicable standard requirements are listed in the <a href=\"https://ot.owasp.org/v/2025/appendix/mappingTable/\" rel=\"noopener noreferrer\" target=\"_blank\">provided mapping table in the appendix</a>.</p><h3>Background information</h3><ul><li><strong><em>Noteable CWSs</em></strong>: the following Common Weakness Enumeration idenifier are highly relevant to this Top 10 item:<ul><li><a href=\"https://cwe.mitre.org/data/definitions/223.html\" rel=\"noopener noreferrer\" target=\"_blank\">CWE-223: Omission of Security-relevant Information</a>. The product fails to record or display information that is essential for identifying the source or nature of an attack, or for assessing whether an action is safe.</li><li><a href=\"https://cwe.mitre.org/data/definitions/532.html\" rel=\"noopener noreferrer\" target=\"_blank\">CWE-532: Insertion of Sensitive Information into Log File</a>. The product logs sensitive information, e.g.; passwords, hashes, or credentials.</li><li><a href=\"https://cwe.mitre.org/data/definitions/778.html\" rel=\"noopener noreferrer\" target=\"_blank\">CWE-778: Insufficient Logging</a>. When a security-critical event occurs, the product either fails to log the event or omits key details in the log.</li></ul></li><li><strong><em>Notable MITRE ATT&amp;CK framework data sources</em></strong>: <a href=\"https://attack.mitre.org/datasources/DS0015/\" rel=\"noopener noreferrer\" target=\"_blank\">Application Logs</a> are events collected by third-party services, such as mail servers, web applications or other appliances, rather than by the native operating system or platform. <a href=\"https://attack.mitre.org/datasources/DS0029/\" rel=\"noopener noreferrer\" target=\"_blank\">Network Traffic</a> is data transmitted across a network (e.g. the web, DNS, email, files, etc.) that is either summarised (e.g. NetFlow) and/or captured as raw, analysable data (e.g. PCAP).</li></ul><h3>Tooling</h3><ul><li><strong><em>Simulating Attacks</em></strong>: it is highly recommended to verify one's attack detection capabilities. Common approaches are:<ul><li><a href=\"https://www.eicar.org/download-anti-malware-testfile/\" rel=\"noopener noreferrer\" target=\"_blank\">Eicar malware testfile</a>. The EICAR Anti-Virus Test File, also known as the EICAR Test File, is a computer file developed by the European Institute for Computer Antivirus Research (EICAR) and the Computer Antivirus Research Organisation (CARO) to test how computer antivirus programs respond.</li><li><a href=\"https://www.metasploit.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Metasploit framework</a>. The Metasploit Framework is a modular, Ruby-based penetration testing platform that allows you to write, test and execute exploit code. It contains a suite of tools for testing security vulnerabilities, enumerating networks, executing attacks and evading detection. At its core, the framework is a collection of commonly used tools that provide a complete environment for penetration testing and exploit development.</li></ul></li><li><strong><em>Host-centric Logging and Monitoring Tools</em></strong> allow for the collection and analysis of logs from individual hosts, such as servers, workstations, and network devices:<ul><li><a href=\"https://graylog.org/\" rel=\"noopener noreferrer\" target=\"_blank\">Graylog</a> is a free SIEM tool enabling central log management.</li><li><a href=\"https://wazuh.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Wazuh</a> is an open source unified XDR and SIEM protection for endpoints and cloud workloads.</li></ul></li><li><strong><em>Network-centric Logging and Monitoring Tools</em></strong> are used to monitor network traffic and detect anomalies or malicious activities:<ul><li><a href=\"https://www.snort.org/\" rel=\"noopener noreferrer\" target=\"_blank\">Snort</a> is a open-source intrusion prevention system (IPS). Snort IPS uses a series of rules to help define malicious network activity, identifying packets that match these rules and generating alerts for users. Snort can also be deployed in line to block these packets. Snort has three primary uses: It can be used as a packet sniffer, like tcpdump; as a packet logger, which is useful for debugging network traffic; or as a full-blown network intrusion prevention system. Snort can be downloaded and configured for personal and business use.</li><li><a href=\"https://suricata.io/\" rel=\"noopener noreferrer\" target=\"_blank\">Suricata</a> is a open-source network analysis and threat detection software used by private and public organisations, as well as being embedded by vendors to protect their assets.</li></ul></li></ul>",
        "sort_order": 6
    },
    {
        "tags":
        [],
        "testcase": "Broken Zones and Conduits Design",
        "details": "<p>Having a sound segmentation concept mitigates already a lot of other security risks. This makes having proper segmentation and secured interfaces between the segments even more important. On the other hand, a complex design might introduce errors and loopholes in the design. Therefore, the \"correct\" design is not the most complex, or micro segmented, but the one that fulfills all the needs without being overly complex.</p><h2></h2><h2>Description</h2><p>OT assets (like PLCs, Safety PLCs, HMIs, Historians) should be grouped according to their security requirements in zones. The zones itself can be defined via a risk-based approach (e.g. Threat and Risk Analysis). The objective is to balance operational feasibility (e.g. limited resources) with security considerations (e.g., avoiding overexposure of critical assets). Conduits are controlled communication paths between those zones. Within conduits, communication should be regulated using standard segmentation and segregation controls, such as firewalls and access control lists (ACLs). Segmentation is the process of dividing a network into smaller parts, where the network segments itself should be aligned to the zones defined earlier. Common design errors include:</p><ul><li>Missing demilitarized Zone (DMZ) between IT and OT: Direct connections from IT to OT zones and vice versa are possible without or without proper restriction.</li><li>Overly broad IP and port ranges in access control lists: ACLs are configured with broad IP and port ranges, permitting entire network segments to establish connections across port ranges rather than enforcing per-host restrictions.</li><li>Multi-homed-devices: Multi-homed devices have network interfaces in multiple network zones and may allow lateral movement, either through intentionally enabled routing capabilities or if the device is compromised.</li><li>Possible command and control channels: Protocols such as IMAP and DNS within the OT network introduces the risk of unintended command and control channels, which may be used for lateral movement or data exfiltration.</li><li>Hardware debug interfaces act as backdoors into zones: When debug interfaces like JTAG or SWD are forgotten to be deactivated, they can act as an entry point into otherwise highly secured zones. By gaining access to e.g. a device on the shopfloor via physical access, this enables an attacker to potentially move laterally to other systems in the same zone and compromise it completely.</li><li>Forgotten remote access: While remote access via different protocols and solutions is more or less a necessity in most modern OT environments, they too can act as effective bypasses for defined zone access controls when not considered from the start and isolated accordingly. By acting as kind of an out-of-bound conduit that was not defined beforehand, this can result in a potential point of entry into a otherwise highly isolated zone.</li></ul><h2></h2><h2>Rationale</h2><p>The most common entry into OT-zones comes from IT environments. For hardware devices the most common entry is via debugging interfaces. After getting entry into the system, without segmenting networks and isolating services, an attacker has full access to the network. Unfortunately, in realty networks are very flat. Segmentation or networks and services enables implementation of core principles like \"defense in depth\" and \"least privilege\".</p><h2></h2><h2>Known Attacks/Examples</h2><ul><li><a href=\"https://securityscorecard.com/wp-content/uploads/2024/01/aliquippa-report.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">Cyber Risk Intelligence: Iran-Linked Attack on U.S.Water Treatment Facility</a></li><li><a href=\"https://www.techspot.com/news/102661-russia-backed-hacking-group-suspected-attack-us-water.html\" rel=\"noopener noreferrer\" target=\"_blank\">Russia-backed hacking group suspected of attack on US water system</a></li><li>Having e.g., your RDP connections exposed to the internet can have severe consequences as seen with Eternal Blue (<a href=\"https://www.avast.com/c-eternalblue\" rel=\"noopener noreferrer\" target=\"_blank\">What Is EternalBlue and Why Is the MS17-010 Exploit Still Relevant?</a>).</li></ul><h2></h2><h2>Mitigation/Countermeasures</h2><h3>Design and Implementation</h3><p>IEC 62443-3-2 suggests a full methodology for the establishment of zones and conduits. While details can be found there, a short summary should be given at this point:</p><ol><li><strong>Identification of the System under Consideration (SuC)</strong>: Identify all systems (hardware and software), network devices and communications links that should be secured by zones and conduits.</li><li><strong>Perform an initial cyber security risk assessment</strong>: A high level risk assessment helps in identifying possible threats and worst case risks for the assets in the SuC. This allows prioritization of available resources where they are needed most.</li><li><strong>Partition of the SUC into zones and conduits</strong>: Assets are grouped in segments on basis of the results of the initial risk assessment. Further criteria that can influence grouping are criticality of assets, physical and/or logical location, functionality or required access (“Least Privilege”). Conduits are then to be defined between zones. They should be as tightly controlled and minimized as possible.</li><li><strong>Check if initial risk exceeds tolerable risk</strong>: If the results of Step 2 exceed the tolerable risk of the organization, an additional detailed risk assessment (Step 5) should be conducted. Otherwise, Step 5 can be omitted.</li><li><strong>Perform a detailed cyber security risk assessment</strong>: For each zone and conduit, a more granular threat and risk assessment should be executed. This process should result in appropriate risk reduction measures and aims to identify any gaps in controls already put in place.</li><li><strong>Document cyber security requirements, assumptions and constraints</strong>: All technical requirements for each zone and conduits, all assumptions made during the whole process and all constraints (legacy systems, technological issues, budgetary issues) must be documented for full transparency.</li><li><strong>Get asset owner approval</strong>: Owners of affected assets have to review and approve results of the process.</li></ol><h3>Operational</h3><ul><li>Once zones and conduits are implemented, the have to be steadily monitored and reassessed for further improvements and adaptions. Especially network and system changes can require adaptions in the established zoning concept.</li></ul><h2></h2><h2>Next Actionable Steps</h2><ul><li>Inventorize your assets (including all required interfaces)</li><li>Monitor your networks to get insights in what systems communicate with each other</li><li>Follow the steps outlined above</li><li>For more information, consult IEC 62443-3-2</li></ul><h2></h2><h2>References</h2><h3>Standards</h3><ul><li>Applicable standard requirements are listed in the <a href=\"https://ot.owasp.org/v/2025/appendix/mappingTable/\" rel=\"noopener noreferrer\" target=\"_blank\">provided mapping table in the appendix</a>.</li></ul><h3>Background information</h3><ul><li>N.A.</li></ul><h3>Tooling</h3><ul><li>Bloodhound for AD tree building</li><li>nmap for environment scanning</li><li>Network monitoring tools for traffic analysis (especially useful for determination of needed conduits)</li></ul>",
        "sort_order": 7
    },
    {
        "tags":
        [],
        "testcase": "Missing Awareness",
        "details": "<p>It's not enough to have security capabilities, they need to be used. If no one is aware of potential security issues and how the respective security capabilities can help, employees will not use them and thus finally useless.</p><h2></h2><h2>Description</h2><p>Security awareness is the understanding and knowledge of security risks, threats, and best practices within an organization. It involves educating employees about potential security vulnerabilities and how to mitigate them. In many cases, organizations have security capabilities in place, but employees are not aware of them or do not know how to use them effectively.</p><p>There is a connection to <a href=\"https://ot.owasp.org/v/2025/the-top-10/components-with-insufficient-security-capabilities/\" rel=\"noopener noreferrer\" target=\"_blank\">Devices with Missing Capabilities</a>: we need both devices with security capabilities and the knowledge to use them. If either is missing, the security capabilities are useless.</p><p>The same goes for security policies: if there are policies in place, but they are not lived, they are ultimately useless. This can be due to a lack of knowledge or understanding of the policies, or it can be due to a lack of resources or time to implement them. The best way to counteract this is to make employees understand why the security policies were created and how they protect their daily work.</p><h3>Add Security Requirements to Tenders</h3><p>Very often security is an afterthought leading to problems such as insecure designs that are expensive to fix, as well as missing resources for security. This is especially problematic in the OT world with its long-running lifetimes: if security is not part of the design process, fixes can become prohibitively expensive and applying those fixes will lead to downtimes.</p><p>A good way to counteract this is to add security requirements to tenders. By including these requirements in tenders, organizations can ensure that security is considered from the outset of the project. Making security tests a part of acceptance tests also gives the \"customer\" more leverage when negotiating security fixes with the vendor.</p><h3>OT and IT Are Often Not Integrated</h3><p>OT and IT are often not integrated, leading to a lack of communication and understanding between the two teams. This can result in security gaps and vulnerabilities that are not addressed.</p><p>IT security people often wonder why even basic security hygiene is not applied in OT environments. This can be due to a lack of understanding of the unique challenges and requirements of OT systems. While OT people are in possession of the ground truth, they often wonder why security is now being pushed into their environments.</p><p>Many OT systems are designed to operate continuously and cannot be easily patched or updated without causing downtime. This can lead to a culture of \"if it ain't broke, don't fix it\" that can leave systems vulnerable to attacks.</p><h3>Security by Obscurity Does Not Work in the Long Run</h3><p>Security by obscurity is the practice of keeping security measures secret in order to protect them from attackers. This can include using proprietary protocols, custom hardware, or other techniques that are not widely known or understood. The idea is that if attackers do not know how the system works, they will not be able to exploit it.</p><p>However, this approach is flawed. Attackers can often reverse-engineer systems or find other ways to discover vulnerabilities, even if the details of the system are not publicly available. Security by obscurity can create a false sense of security and lead to complacency in addressing vulnerabilities.</p><p>This approach is often used in OT environments, where systems are not well documented or understood. However, this approach is not effective in the long run, as attackers can still find ways to exploit vulnerabilities.</p><p>Security by obscurity can be used to make an attacker's job more difficult, but it should not be relied upon as the sole means of protection.</p><h3>Security Capabilities Are Useless If Not Used</h3><p>In OT, we often have the initial problem of long-lived <a href=\"https://ot.owasp.org/v/2025/the-top-10/components-with-insufficient-security-capabilities/\" rel=\"noopener noreferrer\" target=\"_blank\">components with missing capabilities</a>, but even if we have the needed capabilities, they are often not used. This can be due to a lack of knowledge or understanding of the capabilities.</p><p>Educating employees (in the sense of \"explaining the reasons for the measures taken\" and not \"preaching security\") thus is of high importance to ensure that security capabilities are used effectively. This includes providing training and resources to help employees understand how to use security capabilities, as well as creating a culture of security awareness within the organization.</p><p>Examples of security problems introduced by missing awareness include:</p><ul><li>everything configuration related</li><li>missing encryption even if available</li><li>available JTAG/SWD interface left enabled on production devices</li><li>Intentional misconfiguration for ease of use, e.g., leaving rtu's in upload mode</li></ul><h3>Training Beyond Compliance</h3><p>Training must evolve beyond compliance checkboxes to prepare personnel for real-world scenarios where cyber incidents can appear as equipment failures. The \"grey zone\" between mechanical failure and cyber attack presents a particular challenge - operators must quickly determine whether they're facing a component failure or a cyberattack.</p><h3>Third-Party Blind Spot</h3><p>A critical gap exists in extending cybersecurity awareness to contractors, vendors, and third-party technicians. These individuals often have privileged access to OT systems but operate with little-to-no cybersecurity awareness. This <a href=\"https://ot.owasp.org/v/2025/the-top-10/inadequate_supply_chain_management/\" rel=\"noopener noreferrer\" target=\"_blank\">supply chain vulnerability</a> is increasingly exploited by threat actors, as third parties may have elevated or unrestricted access with far less security training compared to in-house personnel.</p><h2></h2><h2>Rationale</h2><p>The best hardware with the best security capabilities is useless if no one is aware of them and how to use them. Educating employees about security risks and best practices can help mitigate vulnerabilities and improve overall security posture.</p><h2></h2><h2>Known Attacks/Examples</h2><ul><li><a href=\"https://www.theregister.com/2024/09/07/us_water_cyberattacks/\" rel=\"noopener noreferrer\" target=\"_blank\">The Register: Iranian hacktivists .. likely broke into the facilities by using default passwords for internet-accessible PLCs</a></li><li><a href=\"https://en.wikipedia.org/wiki/Colonial_Pipeline_ransomware_attack\" rel=\"noopener noreferrer\" target=\"_blank\">Colonial Pipeline Hack</a>: The attackers gained access to the system by means of a compromised password for a disused VPN account.</li><li><a href=\"https://www.dragos.com/resources/whitepaper/trisis-analyzing-safety-system-targeting-malware/\" rel=\"noopener noreferrer\" target=\"_blank\">TRISIS: The Triconex SIS controller had the keyswitch in ‘program mode’ during the time of the attack and the SIS was connected to the operations network against best practices. In a proper configuration and with the controller placed in Run mode (program changes not permitted) the attackers would face a more difficult challenge implementing the attack.</a></li></ul><h2></h2><h2>Mitigation/Countermeasures</h2><h3>Design and Implementation</h3><ul><li>capture security requirements in the design process</li><li>explain OT-specific security requirements to software developers (if development is part of the implementation/design process)</li></ul><h3>Operational</h3><ul><li>add security requirements to tenders</li><li>make security tests part of acceptance tests</li><li>create a culture of security awareness</li><li>provide training and resources to employees to help them understand and use security capabilities effectively</li><li>implement security policies and procedures that are easy to understand and follow</li><li>integrate cybersecurity into existing safety programs (HSSE)</li><li>conduct live simulation exercises that test response to ambiguous incidents</li><li>extend training requirements to third-party contractors and vendors before granting access</li><li>develop role-based training tailored to specific operational roles</li></ul><h2></h2><h2>Next Actionable Steps</h2><ul><li>add security requirements to tenders</li><li>create a culture of security awareness: help employees understand why the security controls taken are important for their work</li><li>provide training and resources to employees to help them understand and use security capabilities effectively</li><li>integrate cybersecurity awareness into existing safety training programs</li><li>implement live simulation exercises for ambiguous incident response</li></ul><h2></h2><h2>References</h2><h3>Standards</h3><ul><li>Applicable standard requirements are listed in the <a href=\"https://ot.owasp.org/v/2025/appendix/mappingTable/\" rel=\"noopener noreferrer\" target=\"_blank\">provided mapping table in the appendix</a>.</li></ul><h3>Background information</h3><ul><li>N.A.</li></ul><h3>Tooling</h3><ul><li>N.A.</li></ul>",
        "sort_order": 8
    },
    {
        "tags":
        [],
        "testcase": "Selection of Components/Protocols With Insufficient Security Capabilities",
        "details": "<p>Given the long, potentially multi-decades, lifetimes of OT system, it becomes understandable why OT components become legacy systems over time. Many of the mentioned countermeasures try to deal with the existence of legacy systems.</p><p>When designing new systems, however, the best way to deal with legacy systems is to not use them in the first place. If we design new systems there should be slack for future security features.</p><p>This Top 10 items is related to <a href=\"https://ot.owasp.org/v/2025/the-top-10/missing-awareness/\" rel=\"noopener noreferrer\" target=\"_blank\">missing awareness</a>. While missing awareness is about the lack of knowledge about security features, this item is about the lack of security features in the first place.</p><h2></h2><h2>Description</h2><p>We define legacy systems as systems with security and cryptography capabilities that do not conform to current best practices. This includes systems that are not able to be updated or patched, as well as systems that are not able to be replaced.</p><h3>Don’t Use Legacy Systems for New Deployments</h3><p>Obviously, if you are designing a new system, you should not use legacy systems. This is especially true for systems that are not able to be updated or patched. If you are designing a new system, you should use systems that are able to be updated or patched.</p><p>Deployments are seldom new green-field installations. Most of the time, new systems are deployed in existing environments (think about the long lifetimes of OT systems). If new components are added to an existing environment, they often have to conform and interact with the existing environment, often mandating usage of legacy protocols. If this is the case, it would be preferable to use components that (while they provide the legacy feature set) also incorporate capabilities for state-of-the-art security features so that the installation can be updated in the future.</p><h3>Don’t Use Legacy Protocols if Possible</h3><p>Components commonly use standardized protocols to communicate with each other or with other systems. When designing a new system, chosen protocols should heed best security practices and legacy protocols should be avoided if feasible.</p><p>Legacy protocols often have security issues:</p><ul><li>They often lack integrity protection and thus <a href=\"https://ot.owasp.org/v/2025/the-top-10/loss-of-availability/\" rel=\"noopener noreferrer\" target=\"_blank\">can lead to availability problems</a>.</li><li>They do not offer thorough or <a href=\"https://ot.owasp.org/v/2025/the-top-10/insufficient-access-control/\" rel=\"noopener noreferrer\" target=\"_blank\">sufficient authentication mechanisms</a> and thus can lead to unauthorized access to systems and data.</li><li>They have weak built-in security features like basic Bluetooth.</li></ul><h2></h2><h2>Rationale</h2><ul><li>given the long lifetimes of OT systems, parts of them becoming legacy systems will happen</li><li>there is economic pressure to use existing legacy systems for new deployments:w</li><li>there is a lack of awareness about the security implications of using legacy systems</li></ul><h2></h2><h2>Known Attacks/Examples</h2><h2></h2><h2>Mitigation/Countermeasures</h2><h3>Design and Implementation</h3><ul><li>don't use legacy systems or protocols for new deployments</li><li>use components that are able to be updated or patched</li><li>incorporate some slack for future security features in new designs</li></ul><h3>Operational</h3><p>Sadly, there are no operational countermeasures that can be applied to legacy systems. The best way to deal with legacy systems is to not use them in the first place. If you have to use legacy systems, you can try to mitigate the risks by applying the following countermeasures:</p><ul><li>isolate legacy systems from the rest of the network</li><li>monitor legacy systems for unusual activity</li><li>apply compensating controls to mitigate the risks of legacy systems</li><li>apply compensating controls to mitigate the risks of legacy protocols</li></ul><h2></h2><h2>Next Actionable Steps</h2><ul><li>evaluate the components and protocols used in your systems</li><li>identify legacy systems and protocols in your environment</li><li>evaluate the security capabilities of these systems and protocols</li><li>if possible, replace legacy systems and protocols with state-of-the-art components and protocols</li><li>if replacement is not possible, apply compensating controls to mitigate the risks of legacy systems and protocols</li></ul><h2></h2><h2>References</h2><h3>Standards</h3><ul><li>Applicable standard requirements are listed in the <a href=\"https://ot.owasp.org/v/2025/appendix/mappingTable/\" rel=\"noopener noreferrer\" target=\"_blank\">provided mapping table in the appendix</a>.</li></ul><h3>Background Information</h3><ul><li>N.A.</li></ul><h3>Tooling</h3><ul><li>N.A.</li></ul>",
        "sort_order": 9
    },
    {
        "tags":
        [],
        "testcase": "Missing Hardening",
        "details": "<p>Hardening is usually done to make a system more secure, typically by reducing or restricting features which inherently reduces a system's attack surface. Another form of hardening is enabling additional layers of security so that an attacker has to overcome multiple hurdles to gain access to a system.</p><h2></h2><h2>Description</h2><p>Hardening is the process of securing a system by reducing its surface of vulnerability. This can be achieved by removing unnecessary services, closing unused ports, and applying security patches. Hardening is an essential step in securing any system, as it reduces the number of potential entry points for attackers.</p><p>Another way of hardening is to apply additional layers of security, such as firewalls, intrusion detection systems, and encryption. These additional layers can help protect against attacks even if the underlying system is compromised. In the context of OT, hardening is particularly important due to the unique challenges and requirements of these systems. OT systems are often designed to operate continuously and cannot be easily patched or updated without causing downtime.</p><h3>Apply Established Hardening Guidelines</h3><p>Hardening guidelines are established best practices for securing systems and networks. These guidelines provide a framework for identifying and mitigating vulnerabilities, and they can help organizations implement effective security measures.</p><p>Some well-known hardening guidelines include the Center for Internet Security (CIS) benchmarks or the Defense Information Systems Agency (DISA) Security Technical Implementation Guides (STIGs).</p><h3>Disable Default Accounts and Passwords</h3><p>Default accounts and passwords are often used in OT systems, and they can pose a significant security risk if not properly managed. Attackers can easily exploit these default credentials to gain unauthorized access to systems and networks. It is essential to disable or change default accounts and passwords during the hardening process to reduce the risk of unauthorized access.</p><h2></h2><h2>Rationale</h2><p>Inclusion of hardening in the OWASP OT Top 10 was a point of serious discussion.</p><p>Hardening itself does not reduce a concrete vulnerability but makes meaningful exploitation of vulnerabilities harder for attackers.</p><p>Empirical data, gathered during the development of the OWASP OT Top 10, showed that missing hardening was a common part of successful exploits and comprehensive hardening would have prevented successful exploitation.</p><p>Given the requirement of non-stop operation of many OT systems, hardening is crucial as it allows for controlled updates after a security issue has been identified (as the additional security layers uphold the security of the overall system).</p><h2></h2><h2>Known Attacks/Examples</h2><ul><li><a href=\"https://de.wikipedia.org/wiki/Stuxnet\" rel=\"noopener noreferrer\" target=\"_blank\">Stuxnet</a>: Disabling USB ports could have avoided initial compromise.</li><li><a href=\"https://en.wikipedia.org/wiki/NotPetya\" rel=\"noopener noreferrer\" target=\"_blank\">NotPetya</a>: Proper network segmentation and hardening could have limited the spread of the malware.</li></ul><h2></h2><h2>Mitigation/Countermeasures</h2><p>Mitigation and countermeasures can be applied along the supply chain. Starting from the vendor over the integrator to the asset owner.</p><h3>Developers/Component Suppliers/Integrators: Design and Implementation</h3><p>To ensure robust software security across the development lifecycle, component suppliers, and integrators—must adopt proactive countermeasures:</p><ul><li>Disable unnecessary services and interfaces (e.g. USB ports, insecure protocols like Telnet, web server, JTAG/SWD interfaces)</li><li>Start with established hardening benchmarks and gradually relax controls only as necessary to ensure your component or system functions properly</li><li>Include Application allow-listing if possible</li><li>Provide your component or system with a secure default configuration</li><li>Provide a hardening guideline for your component or system to customers</li></ul><h3>Operators: Operational</h3><p>Operators play a critical role in maintaining the security and resilience of deployed systems. To reduce risk and ensure operational integrity, the following countermeasures are essential:</p><ul><li>Make sure hardening is reapplied after maintenance</li><li>Request documentation of hardening measures</li><li>Include hardening requirements in the tender, ideally with the integrator providing their own hardening concept</li><li>Make sure hardening is actually implemented with a Pentest or some kind of Cybersecurity Acceptance Test (during SAT/FAT)</li></ul><h2></h2><h2>Next Actionable Steps</h2><p>To be able to implement sensible measures one could follow these steps:</p><ul><li>identify applicable hardening guidelines for your environment: Every environment is different and therefore has different needs and priotitizes different topics. Finding the right measures for the system under consideration is the first and most crucial step when trying to improve the security posture of a system.</li><li>implement hardening guidelines: After identifying the shortcomings, hardening guidelines for the insecure systems can help to provide a good baseline to improve from.</li><li>disable default accounts and passwords: Default credentials are commonly used and misused way of getting access to permissions that should normally be behind proper safeguards.</li></ul><h2></h2><h2>References</h2><h3>Standards</h3><ul><li>Applicable standard requirements are listed in the <a href=\"https://ot.owasp.org/v/2025/appendix/mappingTable/\" rel=\"noopener noreferrer\" target=\"_blank\">provided mapping table in the appendix</a>.</li><li>OT-specific hardening guides are often provided by the system integrator or product supplier, for example:<ul><li><em>\"System Hardening for Substation Automation and Protection\"</em> for SICAM/SIPROTEC, which includes hardening measures at the solution level as well as for individual components.</li></ul></li><li>Several organizations provide configuration baselines and benchmarks for common systems:<ul><li>The <strong>Center for Internet Security (CIS)</strong> offers <strong>Benchmarks</strong> for various systems, including operating systems, network devices, and commonly used applications. In OT environments, relevant benchmarks cover operating systems, network infrastructure, and supporting applications.</li><li>The <strong>Defense Information Systems Agency (DISA)</strong> publishes <strong>Security Technical Implementation Guides (STIGs)</strong>, which define configuration standards for securing Department of Defense (DoD) IT systems and are also widely adopted in other sectors.</li><li><strong>Microsoft Security Baselines</strong> recommend security settings for Windows operating systems and Microsoft applications.</li></ul></li></ul><h3>Background information</h3><ul><li><a href=\"https://www.plattform-i40.de/IP/Redaktion/DE/Downloads/Publikation/leitfaden-it-security-i40.pdf?__blob=publicationFile&amp;v=1\" rel=\"noopener noreferrer\" target=\"_blank\">BSI IT-Security in der Industrie (german)</a></li><li><a href=\"https://en.wikipedia.org/wiki/Hardening_(computing)\" rel=\"noopener noreferrer\" target=\"_blank\">https://en.wikipedia.org/wiki/Hardening_(computing)</a></li><li><a href=\"https://en.wikipedia.org/wiki/Defense_in_depth_(computing)\" rel=\"noopener noreferrer\" target=\"_blank\">https://en.wikipedia.org/wiki/Defense_in_depth_(computing)</a></li></ul><h3>Tooling</h3><ul><li>Tenable Nessus / OpenVAS, with compliance Scanning</li><li>Microsoft Security Compliance Toolkit</li></ul>",
        "sort_order": 10
    }
]
